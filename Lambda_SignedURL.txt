import { PutObjectCommand, S3Client } from "@aws-sdk/client-s3";
import { getSignedUrl } from "@aws-sdk/s3-request-presigner";


export async function handler(event) {
   
    const s3Client = new S3Client({ region: "us-east-1" });
    const bucketName = 'archromex-source';
    const uploadedFileName = event.uploadedFile?.name || 'video';
    const objectName = uploadedFileName;


    const command = new PutObjectCommand({
        Bucket: bucketName,
        Key: objectName,
    
    });

    try {
        const signedUrl = await getSignedUrl(s3Client, command, { expiresIn: 3600 }); 

        return {
            statusCode: 200,
            headers: {
                "Access-Control-Allow-Origin": "*",
            },
            body: JSON.stringify({ url: signedUrl }),
        };
    } catch (error) {
        console.error('Error generating signed URL', error);
        return {
            statusCode: 500,
            body: JSON.stringify({ error: "Error generating signed URL", details: error.message }),
        };
    }
}
